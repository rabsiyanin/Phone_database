        searchByTheNumberButton.addActionListener(e -> {
            long i = 0;
            long j = 0;
            float result = 0;
            for (int t = 0; t<1000; t++) {
                long constSearch = System.currentTimeMillis();
                if (!numberWasFound(Long.parseLong(numberTextField.getText().trim()), phoneChains)) {
                    JOptionPane.showMessageDialog(parent, "Woah there! We don't have 'em boys with the mentioned phone number.");
                } else {
                    sheetArea.setText("");
                    String path = filepathing(openFilenameInput.getText());
                    RandomAccessFile fileWriter = null;
                    try {
                        fileWriter = new RandomAccessFile(path, "rw");
                    } catch (FileNotFoundException ignored) {
                    }
                    int index = (int) phoneChains.get(Long.parseLong(numberTextField.getText().trim()));
                    String foundLineNumber;
                    try {
                        fileWriter.seek(index);
                        foundLineNumber = fileWriter.readLine();/*
                    sheetArea.append(foundLineNumber);
                    sheetArea.append("\n\nThe record was found via the const search.\nВремя, затраченное на константный поиск: " + (System.currentTimeMillis() - constSearch) + "\n");*/
                        i = i + (System.currentTimeMillis() - constSearch);
                    } catch (IOException ignored) {
                    }
                    ;
                }

                long linearSearch = System.currentTimeMillis();
                if (!numberWasFound(Long.parseLong(numberTextField.getText().trim()), phoneChains)) {
                    JOptionPane.showMessageDialog(parent, "Woah there! We don't have 'em boys with the mentioned phone number.");
                } else {
                    String path = filepathing(openFilenameInput.getText());
                    String line;
                    RandomAccessFile fileWriter = null;
                    try {
                        fileWriter = new RandomAccessFile(path, "rw");
                    } catch (FileNotFoundException ignored) {
                    }
                    while (true) {
                        try {
                            line = fileWriter.readLine();
                        } catch (IOException ex) {
                            throw new RuntimeException(ex);
                        }
                        if (Objects.equals(line.split(",")[2], numberTextField.getText().trim())) {
                            break;
                        }
                    }
                }
                j = j + (System.currentTimeMillis() - constSearch);
                result = (float) i /1000;
                sheetArea.append("Const search average speed (in ms): " + result);
                result = (float) j /1000;
                sheetArea.append("\n\nLinear search average speed (in ms): " + result);
            }


        });